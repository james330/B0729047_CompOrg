// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition"

// DATE "11/08/2019 16:38:51"

// 
// Device: Altera 5CGXFC7C7F23C8 Package FBGA484
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module task1 (
	A,
	clk,
	x,
	y,
	B);
output 	A;
input 	clk;
input 	x;
input 	y;
output 	B;

// Design Ports Information
// A	=>  Location: PIN_P6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B	=>  Location: PIN_W8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// x	=>  Location: PIN_N6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// y	=>  Location: PIN_W9,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clk	=>  Location: PIN_M16,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \~QUARTUS_CREATED_GND~I_combout ;
wire \clk~input_o ;
wire \clk~inputCLKENA0_outclk ;
wire \y~input_o ;
wire \x~input_o ;
wire \inst~combout ;
wire \inst1~q ;
wire \inst3~combout ;
wire \inst2~q ;


// Location: IOOBUF_X4_Y0_N19
cyclonev_io_obuf \A~output (
	.i(\inst1~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(A),
	.obar());
// synopsys translate_off
defparam \A~output .bus_hold = "false";
defparam \A~output .open_drain_output = "false";
defparam \A~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X4_Y0_N53
cyclonev_io_obuf \B~output (
	.i(\inst2~q ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(B),
	.obar());
// synopsys translate_off
defparam \B~output .bus_hold = "false";
defparam \B~output .open_drain_output = "false";
defparam \B~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOIBUF_X89_Y35_N61
cyclonev_io_ibuf \clk~input (
	.i(clk),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\clk~input_o ));
// synopsys translate_off
defparam \clk~input .bus_hold = "false";
defparam \clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G10
cyclonev_clkena \clk~inputCLKENA0 (
	.inclk(\clk~input_o ),
	.ena(vcc),
	.outclk(\clk~inputCLKENA0_outclk ),
	.enaout());
// synopsys translate_off
defparam \clk~inputCLKENA0 .clock_type = "global clock";
defparam \clk~inputCLKENA0 .disable_mode = "low";
defparam \clk~inputCLKENA0 .ena_register_mode = "always enabled";
defparam \clk~inputCLKENA0 .ena_register_power_up = "high";
defparam \clk~inputCLKENA0 .test_syn = "high";
// synopsys translate_on

// Location: IOIBUF_X4_Y0_N35
cyclonev_io_ibuf \y~input (
	.i(y),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\y~input_o ));
// synopsys translate_off
defparam \y~input .bus_hold = "false";
defparam \y~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X4_Y0_N1
cyclonev_io_ibuf \x~input (
	.i(x),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\x~input_o ));
// synopsys translate_off
defparam \x~input .bus_hold = "false";
defparam \x~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LABCELL_X4_Y2_N45
cyclonev_lcell_comb inst(
// Equation(s):
// \inst~combout  = !\y~input_o  $ (!\x~input_o )

	.dataa(gnd),
	.datab(!\y~input_o ),
	.datac(!\x~input_o ),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam inst.extended_lut = "off";
defparam inst.lut_mask = 64'h3C3C3C3C3C3C3C3C;
defparam inst.shared_arith = "off";
// synopsys translate_on

// Location: FF_X4_Y2_N47
dffeas inst1(
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\inst~combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst1~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst1.is_wysiwyg = "true";
defparam inst1.power_up = "low";
// synopsys translate_on

// Location: LABCELL_X4_Y2_N42
cyclonev_lcell_comb inst3(
// Equation(s):
// \inst3~combout  = ( \inst1~q  & ( !\y~input_o  ) ) # ( !\inst1~q  )

	.dataa(gnd),
	.datab(!\y~input_o ),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(!\inst1~q ),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\inst3~combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam inst3.extended_lut = "off";
defparam inst3.lut_mask = 64'hFFFFFFFFCCCCCCCC;
defparam inst3.shared_arith = "off";
// synopsys translate_on

// Location: FF_X4_Y2_N43
dffeas inst2(
	.clk(\clk~inputCLKENA0_outclk ),
	.d(\inst3~combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst2~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst2.is_wysiwyg = "true";
defparam inst2.power_up = "low";
// synopsys translate_on

// Location: MLABCELL_X28_Y19_N3
cyclonev_lcell_comb \~QUARTUS_CREATED_GND~I (
// Equation(s):

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\~QUARTUS_CREATED_GND~I_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \~QUARTUS_CREATED_GND~I .extended_lut = "off";
defparam \~QUARTUS_CREATED_GND~I .lut_mask = 64'h0000000000000000;
defparam \~QUARTUS_CREATED_GND~I .shared_arith = "off";
// synopsys translate_on

endmodule
